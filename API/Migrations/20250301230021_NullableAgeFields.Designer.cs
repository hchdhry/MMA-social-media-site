// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250301230021_NullableAgeFields")]
    partial class NullableAgeFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FighterId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FighterId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("API.Models.Fighter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("Age")
                        .HasColumnType("double precision");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Losses")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Reach")
                        .HasColumnType("double precision");

                    b.Property<double?>("SignificantStrikeAccuracy")
                        .HasColumnType("double precision")
                        .HasColumnName("SigStrAcc");

                    b.Property<double?>("SignificantStrikesLandedPerMinute")
                        .HasColumnType("double precision")
                        .HasColumnName("SLpM");

                    b.Property<string>("Stance")
                        .HasColumnType("text");

                    b.Property<double?>("StrikeDefense")
                        .HasColumnType("double precision")
                        .HasColumnName("StrDef");

                    b.Property<double?>("StrikesAbsorbedPerMinute")
                        .HasColumnType("double precision")
                        .HasColumnName("SApM");

                    b.Property<double?>("SubmissionAverage")
                        .HasColumnType("double precision")
                        .HasColumnName("SubAvg");

                    b.Property<double?>("TakedownAccuracy")
                        .HasColumnType("double precision")
                        .HasColumnName("TdAcc");

                    b.Property<double?>("TakedownAverage")
                        .HasColumnType("double precision")
                        .HasColumnName("TdAvg");

                    b.Property<double?>("TakedownDefense")
                        .HasColumnType("double precision")
                        .HasColumnName("TdDef");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision");

                    b.Property<double>("Wins")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Fighters");
                });

            modelBuilder.Entity("API.Models.Comment", b =>
                {
                    b.HasOne("API.Models.Fighter", "Fighter")
                        .WithMany("Comments")
                        .HasForeignKey("FighterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fighter");
                });

            modelBuilder.Entity("API.Models.Fighter", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
